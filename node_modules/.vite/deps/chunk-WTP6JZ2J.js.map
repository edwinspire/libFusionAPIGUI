{
  "version": 3,
  "sources": ["../../node-fetch/browser.js", "../../@edwinspire/universal-fetch/src/fetch.js"],
  "sourcesContent": ["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n", "\"use strict\";\n\n/**\n * @type {(((input: RequestInfo | URL, init?: RequestInit | undefined) => Promise<Response>) & ((input: RequestInfo | URL, init?: RequestInit | undefined) => Promise<Response>)) | typeof fetch | ((arg0: string | undefined, arg1: { method: string; body?: string; headers: any; }) => any)}\n */\nlet fetchData;\n\nif (typeof window !== \"undefined\") {\n  fetchData = window.fetch;\n} else {\n  const fetch = require(\"node-fetch\");\n  fetchData = fetch;\n}\n\n/**\n *  @description Class to fetch in browsers and nodejs\n */\nclass uFetch {\n  /**\n   *\n   * @param {string|undefined} url\n   * @param {string|undefined} redirect_in_unauthorized\n   */\n  constructor(url = undefined, redirect_in_unauthorized = undefined) {\n    this._redirect_in_unauthorized_internal = redirect_in_unauthorized;\n    this._basic_authentication = {};\n    this._bearer_authentication;\n    this._url = url;\n    this._defaultHeaders = new Map();\n  }\n\n  /**\n   *\n   * @param {string} user\n   * @param {string} password\n   * @returns\n   */\n  SetBasicAuthentication(user, password) {\n    if (user && password) {\n      this._basic_authentication =\n        \"Basic \" + Buffer.from(user + \":\" + password).toString(\"base64\");\n    } else {\n      this._basic_authentication = undefined;\n    }\n    return this;\n  }\n\n  /*\n  setBasicAuthorization(user, password) {\n    if (user && password) {\n      this._basic_authentication =\n        \"Basic \" + Buffer.from(user + \":\" + password).toString(\"base64\");\n    } else {\n      this._basic_authentication = undefined;\n    }\n    return this;\n  }\n  */\n\n  setBearerAuthorization(key) {\n    if (key) {\n      this._bearer_authentication = \"Bearer \" + key;\n    } else {\n      this._bearer_authentication = undefined;\n    }\n    return this;\n  }\n\n  _addAuthorizationHeader(headers) {\n    if (this._basic_authentication) {\n      headers.Authorization = this._basic_authentication;\n    }\n    if (this._bearer_authentication) {\n      headers.Authorization = this._bearer_authentication;\n    }\n    return headers;\n  }\n\n  addHeader(key, value) {\n    this._defaultHeaders.set(key, value);\n  }\n\n  /**\n   *\n   * @param {string | undefined} url\n   * @param {string} method\n   * @param {any | undefined} data\n   * @param {any | undefined} headers\n   * @returns {Promise}\n   */\n  async request(url, method, data, headers) {\n    let response;\n    let m = method ? method.toUpperCase() : \"GET\";\n    let u = url || this._url;\n\n    //console.log('000000000> ', m, data);\n\n    if (\n      !(\n        m == \"GET\" ||\n        m == \"POST\" ||\n        m == \"HEAD\" ||\n        m == \"PUT\" ||\n        m == \"DELETE\" ||\n        m == \"CONNECT\" ||\n        m == \"OPTIONS\" ||\n        m == \"TRACE\" ||\n        m == \"PATCH\"\n      )\n    ) {\n      throw \"Invalid method\";\n    }\n\n    if (!headers) {\n      headers = {\n        \"Content-Type\": \"application/json\",\n      };\n    }\n\n    headers = this._addAuthorizationHeader(headers);\n\n    for (const [key, value] of this._defaultHeaders) {\n      //console.log(`${key} = ${value}`);\n      headers[key] = value;\n    }\n\n    try {\n      switch (m) {\n        case \"POST\":\n          //    console.log('++++++++++++++++++> POST', data, JSON.stringify(data));\n          response = await fetchData(u, {\n            method: m,\n            body: JSON.stringify(data),\n            headers: headers,\n          });\n\n          break;\n\n        case \"PUT\":\n          response = await fetchData(u, {\n            method: m,\n            body: JSON.stringify(data),\n            headers: headers,\n          });\n\n          break;\n        default:\n          let searchURL = new URLSearchParams(data);\n          u = u + \"?\" + searchURL.toString();\n\n          response = await fetchData(u, {\n            method: m,\n            //            body: JSON.stringify(data),\n            headers: headers,\n          });\n\n          break;\n      }\n\n      if (this._redirect_in_unauthorized && response.status == 401) {\n        window.location.href = this._redirect_in_unauthorized;\n      }\n      //cache.put(event.request, response.clone());\n      return response;\n    } catch (err) {\n      console.log(err);\n      //const response = await cache.match(event.request);\n      if (response) return response;\n      throw err;\n    }\n  }\n\n  /**\n   *\n   * @param {string | undefined} url\n   * @param {any | undefined} data\n   * @param {any | undefined} headers\n   * @returns {Promise}\n   */\n  async put(url = undefined, data = undefined, headers = undefined) {\n    return this.request(url, \"PUT\", data, headers);\n  }\n\n  async PUT(opts) {\n    return this.request(opts.url, \"PUT\", opts.data, opts.headers);\n  }\n\n  /**\n   *\n   * @param {string | undefined} url\n   * @param {any | undefined} data\n   * @param {any | undefined} headers\n   * @returns {Promise}\n   */\n  async delete(url = undefined, data = undefined, headers = undefined) {\n    return this.request(url, \"DELETE\", data, headers);\n  }\n\n  async DELETE(opts) {\n    return this.request(opts.url, \"DELETE\", opts.data, opts.headers);\n  }\n\n  /**\n   *\n   * @param {string | undefined} url\n   * @param {any | undefined} data\n   * @param {any | undefined} headers\n   * @returns {Promise}\n   */\n  async post(url = undefined, data = undefined, headers = undefined) {\n    return this.request(url, \"POST\", data, headers);\n  }\n\n  async POST(opts) {\n    return this.request(opts.url, \"POST\", opts.data, opts.headers);\n  }\n\n  /**\n   *\n   * @param {string | undefined} url\n   * @param {any | undefined} data\n   * @param {any | undefined} headers\n   * @returns {Promise}\n   */\n  async get(url = undefined, data = undefined, headers = undefined) {\n    return this.request(url, \"GET\", data, headers);\n  }\n\n  async GET(opts) {\n    return this.request(opts.url, \"GET\", opts.data, opts.headers);\n  }\n\n  /**\n   *\n   * @param {string | undefined} url\n   * @param {any | undefined} data\n   * @param {any | undefined} headers\n   * @returns {Promise}\n   */\n  async patch(url = undefined, data = undefined, headers = undefined) {\n    return this.request(url, \"PATCH\", data, headers);\n  }\n\n  async PATCH(opts) {\n    return this.request(opts.url, \"PATCH\", opts.data, opts.headers);\n  }\n}\n\nmodule.exports = uFetch;\n"],
  "mappings": "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",
  "names": []
}
